{"title":"算法笔记","uid":"f953a678ee781dfc0167a1b2b1c56f02","slug":"算法笔记","date":"2024-11-04T04:34:39.000Z","updated":"2024-12-03T09:00:58.573Z","comments":true,"path":"api/articles/算法笔记.json","keywords":null,"cover":[],"content":"<h2 id=\"排序\"><a href=\"#排序\" class=\"headerlink\" title=\"排序\"></a>排序</h2><h3 id=\"快速排序（nlogn）\"><a href=\"#快速排序（nlogn）\" class=\"headerlink\" title=\"快速排序（nlogn）\"></a>快速排序（nlogn）</h3><h4 id=\"分治思想\"><a href=\"#分治思想\" class=\"headerlink\" title=\"分治思想\"></a>分治思想</h4><h4 id=\"算法框架：\"><a href=\"#算法框架：\" class=\"headerlink\" title=\"算法框架：\"></a>算法框架：</h4><p>1.确定分界点（随便取）</p>\n<p>2.调整区间</p>\n<img src=\"https://raw.githubusercontent.com/sonder-Lin/Mypic/img/img/image-20241010163723657.png\" alt=\"image-20241010163723657\" style=\"zoom: 50%;\" />\n\n<p>3.递归处理左右两段</p>\n<h4 id=\"思想模拟\"><a href=\"#思想模拟\" class=\"headerlink\" title=\"思想模拟\"></a>思想模拟</h4><img src=\"https://raw.githubusercontent.com/sonder-Lin/Mypic/img/img/image-20241010164119478.png\" alt=\"image-20241010164119478\" style=\"zoom:67%;\" />\n\n<p>红色i保证左侧全部小于等于x，绿色j保证右侧大于等于x</p>\n<p>当中间部分不符合时各自停下进行swap</p>\n<h4 id=\"算法模板\"><a href=\"#算法模板\" class=\"headerlink\" title=\"算法模板\"></a>算法模板</h4><div class=\"language-c\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">c</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #292D3E\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">quick_sort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">q</span><span style=\"color: #C792EA\">[]</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">l</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">r</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">//递归的终止情况</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">l </span><span style=\"color: #89DDFF\">&gt;=</span><span style=\"color: #F07178\"> r</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">//第一步：划分子问题</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> l </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> r</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> x </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">q</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">l</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\">r </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\"> j</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">do</span><span style=\"color: #F07178\"> i</span><span style=\"color: #89DDFF\">++;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">q</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\"> x</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">do</span><span style=\"color: #F07178\"> j </span><span style=\"color: #89DDFF\">--</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">q</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #F07178\"> x</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\"> j</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">swap</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">q</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">],</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">q</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">]);</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">//第二步：递归处理子问题</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #82AAFF\">quick_sort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">q</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> l</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> j</span><span style=\"color: #89DDFF\">),</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">quick_sort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">q</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> j</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> r</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">()&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #82AAFF\">quick_sort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">q</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\">n</span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h3 id=\"归并排序（nlogn）\"><a href=\"#归并排序（nlogn）\" class=\"headerlink\" title=\"归并排序（nlogn）\"></a>归并排序（nlogn）</h3><h4 id=\"分治思想-1\"><a href=\"#分治思想-1\" class=\"headerlink\" title=\"分治思想\"></a>分治思想</h4><h4 id=\"算法框架：-1\"><a href=\"#算法框架：-1\" class=\"headerlink\" title=\"算法框架：\"></a>算法框架：</h4><p>1.确定分界点Mid：取中间，将区间划分为两段</p>\n<p>2.递归排序左右两段子序列</p>\n<p>3.将左右两段合二为一（双指针算法）</p>\n<h4 id=\"思想模拟-1\"><a href=\"#思想模拟-1\" class=\"headerlink\" title=\"思想模拟\"></a>思想模拟</h4><p>两个指针分别逐一比较两个子序列中的各元素，且当两者相等时，优先左侧序列进入（从而使得归并排序为稳定的排序算法）</p>\n<h5 id=\"快排也可修改为稳定的排序：将元素修改为一个pair\"><a href=\"#快排也可修改为稳定的排序：将元素修改为一个pair\" class=\"headerlink\" title=\"快排也可修改为稳定的排序：将元素修改为一个pair&lt;元素值、下标&gt;\"></a>快排也可修改为稳定的排序：将元素修改为一个pair&lt;元素值、下标&gt;</h5><h4 id=\"算法模板-1\"><a href=\"#算法模板-1\" class=\"headerlink\" title=\"算法模板\"></a>算法模板</h4><div class=\"language-c\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">c</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #292D3E\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">merge_sort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">q</span><span style=\"color: #C792EA\">[]</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">l</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">r</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">//递归的终止情况</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">l </span><span style=\"color: #89DDFF\">&gt;=</span><span style=\"color: #F07178\"> r</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">//第二步：递归处理左右两段</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> mid </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> l</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\">r </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #82AAFF\">merge_sort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">q</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> l</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> mid</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #82AAFF\">merge_sort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">q</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> mid</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> r</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">//第三步：合并左右两段子序列</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> k </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> l</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> mid</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">i </span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #F07178\"> mid </span><span style=\"color: #89DDFF\">&amp;&amp;</span><span style=\"color: #F07178\"> j </span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #F07178\"> r</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">q</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">q</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">])</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">tmp</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">k</span><span style=\"color: #89DDFF\">++]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">q</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">++];</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">else</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">tmp</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">k</span><span style=\"color: #89DDFF\">++]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">q</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">++];</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">i </span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #F07178\"> mid</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">tmp</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">k</span><span style=\"color: #89DDFF\">++]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">q</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">++];</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">j </span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #F07178\"> r</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">tmp</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">k</span><span style=\"color: #89DDFF\">++]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">q</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">++];</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> l</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> i </span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #F07178\"> r</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> i</span><span style=\"color: #89DDFF\">++,</span><span style=\"color: #F07178\"> j</span><span style=\"color: #89DDFF\">++)</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">q</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">tmp</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">j</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h2 id=\"二分\"><a href=\"#二分\" class=\"headerlink\" title=\"二分\"></a>二分</h2><p>本质：每次将区间长度减半，同时保证答案一定落在区间中，最后当区间长度为1时，即为答案；</p>\n<p>此外，二分一定有解，最后可根据答案判断题意是否有解</p>\n<h3 id=\"整数二分\"><a href=\"#整数二分\" class=\"headerlink\" title=\"整数二分\"></a>整数二分</h3><img src=\"https://raw.githubusercontent.com/sonder-Lin/Mypic/img/img/image-20241103115454088.png\" alt=\"image-20241103115454088\" style=\"zoom: 40%;\" />\n\n<p><strong>二分本质即：根据某种性质（check函数），将区间一分为二，然后不断迭代，可以找到区间分割处的两个边界点</strong></p>\n<p><strong>以下板子则分别对应找到两个区间的两个分界点，灵活运用即可</strong></p>\n<p>板子记忆：</p>\n<p>当r&#x3D;mid时，mid&#x3D;(l+r)&#x2F;2;</p>\n<p>当l&#x3D;mid时，mid&#x3D;(l+r+1)&#x2F;2;（只所以加1，是为了避免陷入[r-1,r]的死循环）</p>\n<h4 id=\"板子如下：\"><a href=\"#板子如下：\" class=\"headerlink\" title=\"板子如下：\"></a>板子如下：</h4><div class=\"language-c\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">c</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #292D3E\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">bool</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">check</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">x</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\">/* ... */</span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #676E95; font-style: italic\"> // 检查x是否满足某种性质</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// 区间[l, r]被划分成[l, mid]和[mid+1, r]时使用：</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">bsearch_1</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">l</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">r</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">l </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\"> r</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> mid </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> l</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\">r </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">check</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">mid</span><span style=\"color: #89DDFF\">))</span><span style=\"color: #F07178\"> r </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> mid</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">    // check()判断mid是否满足性质</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">else</span><span style=\"color: #F07178\"> l </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> mid</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> l</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// 区间[l, r]被划分成[l, mid - 1]和[mid, r]时使用：</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">bsearch_2</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">l</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">r</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">l </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\"> r</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> mid </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> l</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\">r</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">check</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">mid</span><span style=\"color: #89DDFF\">))</span><span style=\"color: #F07178\"> l </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> mid</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">else</span><span style=\"color: #F07178\"> r </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> mid </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> l</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h3 id=\"浮点数二分\"><a href=\"#浮点数二分\" class=\"headerlink\" title=\"浮点数二分\"></a>浮点数二分</h3><p>跟整数二分类似，但更简单，具体体现为：</p>\n<ol>\n<li>不需要特殊处理边界情况</li>\n<li>因为浮点数二分时，区间长度一般为浮点数，所以当区间长度很小时，就可近似认为长度已经为0，此时仍落在区间中的值，即为答案</li>\n</ol>\n<h4 id=\"算法模板-2\"><a href=\"#算法模板-2\" class=\"headerlink\" title=\"算法模板\"></a>算法模板</h4><div class=\"language-c\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">c</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #292D3E\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\">l</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #F78C6C\">1e</span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">8</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #C792EA\">double</span><span style=\"color: #F07178\"> mid</span><span style=\"color: #89DDFF\">=(</span><span style=\"color: #F07178\">l</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\">r</span><span style=\"color: #89DDFF\">)/</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">mid</span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">mid</span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">mid</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #F07178\">n</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            r</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\">mid</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #89DDFF; font-style: italic\">else</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            l</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\">mid</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//或者无脑迭代多次（此处一百次），即将区间长度除以2^100</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F78C6C\">100</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">++)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #C792EA\">double</span><span style=\"color: #F07178\"> mid</span><span style=\"color: #89DDFF\">=(</span><span style=\"color: #F07178\">l</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\">r</span><span style=\"color: #89DDFF\">)/</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178\">mid</span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">mid</span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F07178\">mid</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #F07178\">n</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            r</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\">mid</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #89DDFF; font-style: italic\">else</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            l</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\">mid</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div>","text":"排序快速排序（nlogn）分治思想算法框架：1.确定分界点（随便取） 2.调整区间 3.递归处理左右两段 思想模拟 红色i保证左侧全部小于等于x，绿色j保证右侧...","permalink":"/post/算法笔记","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"算法学习","slug":"算法学习","count":1,"path":"api/categories/算法学习.json"}],"tags":[{"name":"算法","slug":"算法","count":1,"path":"api/tags/算法.json"},{"name":"C++","slug":"C","count":1,"path":"api/tags/C.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%8E%92%E5%BA%8F\"><span class=\"toc-text\">排序</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F%EF%BC%88nlogn%EF%BC%89\"><span class=\"toc-text\">快速排序（nlogn）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%86%E6%B2%BB%E6%80%9D%E6%83%B3\"><span class=\"toc-text\">分治思想</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AE%97%E6%B3%95%E6%A1%86%E6%9E%B6%EF%BC%9A\"><span class=\"toc-text\">算法框架：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%80%9D%E6%83%B3%E6%A8%A1%E6%8B%9F\"><span class=\"toc-text\">思想模拟</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AE%97%E6%B3%95%E6%A8%A1%E6%9D%BF\"><span class=\"toc-text\">算法模板</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F%EF%BC%88nlogn%EF%BC%89\"><span class=\"toc-text\">归并排序（nlogn）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%86%E6%B2%BB%E6%80%9D%E6%83%B3-1\"><span class=\"toc-text\">分治思想</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AE%97%E6%B3%95%E6%A1%86%E6%9E%B6%EF%BC%9A-1\"><span class=\"toc-text\">算法框架：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%80%9D%E6%83%B3%E6%A8%A1%E6%8B%9F-1\"><span class=\"toc-text\">思想模拟</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%BF%AB%E6%8E%92%E4%B9%9F%E5%8F%AF%E4%BF%AE%E6%94%B9%E4%B8%BA%E7%A8%B3%E5%AE%9A%E7%9A%84%E6%8E%92%E5%BA%8F%EF%BC%9A%E5%B0%86%E5%85%83%E7%B4%A0%E4%BF%AE%E6%94%B9%E4%B8%BA%E4%B8%80%E4%B8%AApair\"><span class=\"toc-text\">快排也可修改为稳定的排序：将元素修改为一个pair&lt;元素值、下标&gt;</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AE%97%E6%B3%95%E6%A8%A1%E6%9D%BF-1\"><span class=\"toc-text\">算法模板</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E5%88%86\"><span class=\"toc-text\">二分</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B4%E6%95%B0%E4%BA%8C%E5%88%86\"><span class=\"toc-text\">整数二分</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9D%BF%E5%AD%90%E5%A6%82%E4%B8%8B%EF%BC%9A\"><span class=\"toc-text\">板子如下：</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B5%AE%E7%82%B9%E6%95%B0%E4%BA%8C%E5%88%86\"><span class=\"toc-text\">浮点数二分</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AE%97%E6%B3%95%E6%A8%A1%E6%9D%BF-2\"><span class=\"toc-text\">算法模板</span></a></li></ol></li></ol></li></ol>","author":{"name":"Sonderlin","slug":"blog-author","avatar":"https://raw.githubusercontent.com/sonder-lin/Mypic/img/img/%E5%A4%B4%E5%83%8F.jpg","link":"/","description":"一位正在重塑知识的小蒟蒻~ <br /> <b><i>过了河便是繁星.</i></b> <br /><br /> @ <b>qq：1425906813</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Solidity","uid":"f708a9779c264010c95b53120252c787","slug":"solidity","date":"2024-11-05T07:23:21.000Z","updated":"2024-11-08T09:07:28.510Z","comments":true,"path":"api/articles/solidity.json","keywords":null,"cover":null,"text":"智能合约开发第一个Solidity程序pragma solidity ^0.8.21;contract HelloWeb3{ string public s =...","permalink":"/post/solidity","photos":[],"count_time":{"symbolsCount":279,"symbolsTime":"1 mins."},"categories":[{"name":"智能合约","slug":"智能合约","count":1,"path":"api/categories/智能合约.json"}],"tags":[{"name":"solidity语法","slug":"solidity语法","count":1,"path":"api/tags/solidity语法.json"},{"name":"智能合约开发","slug":"智能合约开发","count":1,"path":"api/tags/智能合约开发.json"}],"author":{"name":"Sonderlin","slug":"blog-author","avatar":"https://raw.githubusercontent.com/sonder-lin/Mypic/img/img/%E5%A4%B4%E5%83%8F.jpg","link":"/","description":"一位正在重塑知识的小蒟蒻~ <br /> <b><i>过了河便是繁星.</i></b> <br /><br /> @ <b>qq：1425906813</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"可投期刊/会议汇总","uid":"d3ee7ff5b0caab720c6799b8d71b17d7","slug":"可投期刊会议汇总","date":"2024-10-31T03:04:24.000Z","updated":"2024-11-05T07:11:02.877Z","comments":true,"path":"api/articles/可投期刊会议汇总.json","keywords":null,"cover":null,"text":"期刊 IEEE Transactions on Network and Service Management CCF C类期刊 中科院2区 审稿速度：好像有点慢...","permalink":"/post/可投期刊会议汇总","photos":[],"count_time":{"symbolsCount":991,"symbolsTime":"1 mins."},"categories":[{"name":"机器学习","slug":"机器学习","count":4,"path":"api/categories/机器学习.json"}],"tags":[{"name":"论文投稿","slug":"论文投稿","count":1,"path":"api/tags/论文投稿.json"}],"author":{"name":"Sonderlin","slug":"blog-author","avatar":"https://raw.githubusercontent.com/sonder-lin/Mypic/img/img/%E5%A4%B4%E5%83%8F.jpg","link":"/","description":"一位正在重塑知识的小蒟蒻~ <br /> <b><i>过了河便是繁星.</i></b> <br /><br /> @ <b>qq：1425906813</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}